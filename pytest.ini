[tool:pytest]
# Pytest configuration for the robotics model optimization platform

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --color=yes
    --junit-xml=test_results/junit.xml
    --cov=src
    --cov-report=html:test_results/coverage_html
    --cov-report=xml:test_results/coverage.xml
    --cov-report=term-missing
    --cov-fail-under=80

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance benchmark tests
    stress: Stress and load tests
    slow: Slow running tests
    gpu: Tests requiring GPU
    network: Tests requiring network access
    asyncio: Async tests
    
# Minimum version requirements
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Warnings configuration
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Asyncio configuration
asyncio_mode = auto

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Parallel execution
# Uncomment to enable parallel test execution
# addopts = -n auto